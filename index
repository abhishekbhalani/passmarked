#!/usr/bin/env node

'use strict';

function start(addresses) {
  for (var address in addresses) {
    validate(addresses[address], function(err) {
      if (err) return;
      else if (args.submit) {
        passmarked.submit(addresses[address], function(err, res) {
          if (!err) passmarked.subscribe(res.id);
        });
      } else {
        passmarked.query(addresses[address], function(err, res) {
          if (!err) process.emit('log:result', res);
        });
      }
    });
  }
}

var _           = require('./lib/colours');
var log         = require('./lib/log');
var pkg         = require('./package.json');
var args        = require('./lib/argv');
var stdin       = require('./lib/stdin');
var output      = require('./lib/output');
var validate    = require('./lib/validate');
var passmarked  = require('./lib/passmarked');

var exitCode  = 0;
var results   = [];

process.on('beforeExit', function() {
  output(results);
  process.exit(exitCode);
}).on('log:error', function(err) {
  console.error(err.join(' '));
  exitCode = 1;
}).on('log:result', function(result) {
  results.push(result);
});

if (args.version) {
  console.log(_.inv(' âœ” passmarked: (version ' + pkg.version + ') '));
} else if (!(args._[0] || args.address)) {
  stdin.read(start);
} else {
  start([args._[0] || args.address]);
}
